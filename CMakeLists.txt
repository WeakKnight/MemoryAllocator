cmake_minimum_required(VERSION 3.0.0)
project(HeapManager VERSION 0.0.0)

SET(CMAKE_C_COMPILER "clang")
SET(CMAKE_CXX_COMPILER "clang++")
SET(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

include(CTest)
enable_testing()

add_library(HeapManager HeapAllocator.cpp BitArray.cpp FixedSizeAllocator.cpp HeapManager.cpp Array.cpp)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
set(CMAKE_FIND_FRAMEWORK "ONLY")
set(CMAKE_FIND_LIBRARY_SUFFIXES ".tbd" ".dylib" ".so" ".a")

include(CPack)

link_directories( ${CMAKE_CURRENT_BINARY_DIR} )
add_executable(TestProgram main.cpp)

IF(APPLE)
   FIND_LIBRARY(CARBON_LIBRARY Carbon)
   FIND_LIBRARY(COCOA_LIBRARY Cocoa)
   FIND_LIBRARY(OPENGL_LIBRARY OpenGL)
   FIND_LIBRARY(IOKIT_LIBRARY IOKit)
   FIND_LIBRARY(COREAUDIO_LIBRARY CoreAudio)
   FIND_LIBRARY(COREVIDEO_LIBRARY CoreVideo)
   FIND_LIBRARY(AUDIOTOOLBOX_LIBRARY AudioToolbox)
   FIND_LIBRARY(FORCEFEEDBACK_LIBRARY ForceFeedback)
   #FIND_LIBRARY(ICONV_LIBRARIES iconv)
      FIND_LIBRARY(ICONV_LIBRARIES NAMES iconv libiconv c
               PATHS
               /opt/local/lib/
               NO_CMAKE_SYSTEM_PATH
      )
   #MARK_AS_ADVANCED (CARBON_LIBRARY)
   SET(EXTRA_LIBS ${CARBON_LIBRARY} ${COCOA_LIBRARY} ${OPENGL_LIBRARY} ${IOKIT_LIBRARY} ${COREAUDIO_LIBRARY} ${COREVIDEO_LIBRARY} ${AUDIOTOOLBOX_LIBRARY} ${FORCEFEEDBACK_LIBRARY} ${ICONV_LIBRARIES})
ENDIF (APPLE)

TARGET_LINK_LIBRARIES(TestProgram libHeapManager.a libSDL2.a ${EXTRA_LIBS})

